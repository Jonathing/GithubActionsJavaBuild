name: Notify Discord about build status

on:
  workflow_call:
    inputs:
      build_status:
        required: true
        type: string
    secrets:
      webhook_url:
        required: true

jobs:
  notify-discord:
    name: Notify Discord
    runs-on: ubuntu-latest
    steps:
    - name: Create JSON embed for Discord
      id: create-json
      uses: actions/github-script@v6
      env:
        ref_type: ${{ github.ref_type }}
        ref_name: ${{ github.ref_name }}
        head_commit_message: ${{ github.event.workflow_run.head_commit.message }}
      with:
        result-encoding: string
        script: |
          'use strict';
          const capitalise = (str) => str.charAt(0).toUpperCase() + str.slice(1)
          const { ref_type, ref_name, head_commit_message } = process.env
          
          const title = capitalise(context.payload.inputs.build_status)
          let colour
          switch (title) {
            case 'Success':
              colour = 2684508
              break
            case 'Failed':
            case 'Cancelled':
              colour = 16071719
              break
            case 'Started':
              colour = 3224808
              break
          }

          const json = {
            username: 'GitHub Actions',
            avatar_url: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png',
            embeds: [{
              author: {
                name: context.payload.repository.name,
                url: context.payload.repository.html_url,
                icon_url: 'https://avatars.githubusercontent.com/u/1390178'
              },
              url: `${context.payload.repository.html_url}/actions/runs/${context.runId}`,
              title: `${title}`,
              color: `${colour}`,
              fields: []
            }]
          }

          json.embeds[0].fields.push({
            name: 'Build number',
            value: '???',
            inline: true
          })

          json.embeds[0].fields.push({
            name: `Build ${ref_type}`,
            value: `${ref_name}`,
            inline: true
          })

          if (title === 'Started') {
            json.embeds[0].fields.push({
              name: 'Commit message',
              value: `${head_commit_message}`
            })
          }

          return JSON.stringify(json)
    - name: Send notification
      run: |
        curl --http2-prior-knowledge --false-start --tcp-fastopen -sS -H "Content-Type: application/json" --request POST --data ${{ steps.create-json.outputs.result }} ${{ env.DISCORD_WEBHOOK }}
      env:
        DISCORD_WEBHOOK: ${{ secrets.webhook_url }}
